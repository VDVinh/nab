version: '3.9'
services:
  redis:
    container_name: redis
    image: redis:alpine
    restart: always
    secrets:
      - redis_password
    environment:
      REDIS_PASSWORD_FILE: /run/secrets/redis_password
    ports:
      - "6379:6379"
    command: ["sh", "-c", "redis-server --requirepass \"$$(cat /run/secrets/redis_password)\""]

  elasticsearch:
    image: elasticsearch:7.10.1
    container_name: elasticsearch
    restart: always
    environment:
      "discovery.type": single-node
    ports:
      - "9200:9200"
      - "9300:9300"

  mysql:
    container_name: mysql
    image: mysql
    ports:
      - "3306:3306"
    restart: always
    secrets:
      - db_password
    environment:
      MYSQL_ROOT_PASSWORD_FILE: /run/secrets/db_password
      MYSQL_DATABASE: "${DB_NAME}"
      MYSQL_USER:  "${DB_USERNAME}"

  product-db:
    container_name: product-db
    image: "product-db:${BUILD_TARGET}"
    depends_on:
      - mysql
    command: sh -c '/wait-for mysql:3306 --timeout 90 -- npm start'
    build:
      context: ./packages/productDB
      target: "${BUILD_TARGET}"
    volumes:
      - ./packages/productDB:/code
      - /code/node_modules/
      - ./packages/protoFiles/products:/code/protoFiles
      - ./secrets/certs:/code/certs
      - ./wait-for:/wait-for
    ports:
      - "55555:55555"
    secrets:
      - db_password
      - ca_cert
      - server_key
      - server_cert
    environment:
      GRPC_SERVER_PORT: 55555
      DB_PASSWORD_FILE: /run/secrets/db_password
      CA_CERT_FILE: /run/secrets/ca_cert
      SERVER_KEY_FILE: /run/secrets/server_key
      SERVER_CERT_FILE: /run/secrets/server_cert
      DB_NAME: "${DB_NAME}"
      DB_USERNAME:  "${DB_USERNAME}"
      DB_HOST: mysql
      GRPC_SSL_STATUS: "${GRPC_SSL_STATUS}"

  seeds:
    container_name: seeds
    image: "product-db:${BUILD_TARGET}"
    command: sh -c '/wait-for mysql:3306 --timeout 90 -- npm run seeds'
    volumes:
      - ./wait-for:/wait-for
    secrets:
      - db_password
    depends_on:
      - mysql
    environment:
      DB_PASSWORD_FILE: /run/secrets/db_password
      DB_NAME: "${DB_NAME}"
      DB_USERNAME:  "${DB_USERNAME}"
      DB_HOST: mysql


  product-bff:
    container_name: product-bff
    depends_on:
      - redis
      - product-db
    build:
      context: ./packages/productBFF
      target: "${BUILD_TARGET}"
    image: "product-bff:${BUILD_TARGET}"
    volumes:
      - ./packages/productBFF:/code
      - /code/node_modules/
      - ./packages/protoFiles/products:/code/protoFiles
      - ./secrets/certs:/code/certs
    ports:
      - "3000:3000"
    secrets:
      - ca_cert
      - client_key
      - client_cert
      - redis_password
    environment:
      CA_CERT_FILE: /run/secrets/ca_cert
      CLIENT_KEY_FILE: /run/secrets/client_key
      CLIENT_CERT_FILE: /run/secrets/client_cert
      PRODUCT_STREAM: "${PRODUCT_STREAM}"
      REDIS_HOST: redis
      REDIS_PORT: 6379
      REDIS_PASSWORD_FILE: /run/secrets/redis_password
      GRPC_SERVER_URI: "product-db:55555"
      GRPC_SSL_STATUS: "${GRPC_SSL_STATUS}"

  analytics:
    container_name: analytics
    depends_on:
      - elasticsearch
      - redis
    volumes:
      - ./packages/analytics:/code
      - /code/node_modules/
      - ./wait-for:/wait-for
    image: "analytics:${BUILD_TARGET}"
    build:
      context: ./packages/analytics
      target: "${BUILD_TARGET}"
    command: sh -c '/wait-for redis:6379 --timeout 90 -- /wait-for elasticsearch:9200 --timeout 90 -- node index.js'
    environment:
      PRODUCT_STREAM: "${PRODUCT_STREAM}"
      CONSUMER_GROUP_NAME: "${CONSUMER_GROUP_NAME}"
      CONSUMER_NAME: "${CONSUMER_NAME}"
      REDIS_HOST: redis
      REDIS_PORT: 6379
      REDIS_PASSWORD_FILE: /run/secrets/redis_password
      ELASTIC_SEARCH_URL: "http://elasticsearch:9200"
    secrets:
      - redis_password

  e2e-tests:
    container_name: e2e-tests
    volumes:
      - ./packages/e2e-tests:/code
      - /code/node_modules/
      - ./wait-for:/wait-for
    build:
      context: ./packages/e2e-tests
    command: sh -c '/wait-for product-bff:3000 -- /wait-for elasticsearch:9200 --timeout 120 -- npm run test'
    environment:
      PRODUCT_BFF_URL: product-bff:3000
      ELASTIC_SEARCH_URL: elasticsearch:9200
secrets:
  db_password:
    file: 'secrets/db_password.txt'
  redis_password:
    file: 'secrets/redis_password.txt'
  ca_cert:
    file: 'secrets/certs/ca.crt'
  server_key:
    file: 'secrets/certs/server.key'
  server_cert:
    file: 'secrets/certs/server.crt'
  client_key:
    file: 'secrets/certs/client.key'
  client_cert:
    file: 'secrets/certs/client.crt'
